install.packages("rJava")
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(rJava)
install.packages("rJava") #Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-10.0.1/")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-10.0.1/")
library(rJava)
library(devtools)
find_rtools()
library(tabulizer)  # Handy tool for PDF Scraping
library(tidyverse)
tidyverse_conflicts()
library(GLMsData)
install.packages("GLMsData")
install.packages("Rtools")
library(GLMsData)
data(lungcap) # Make the data set lungcap available for use
head(lungcap)
head(lungcap$Age)
head(lungcap$FEV)
head(lungcap$Ht)
head(lungcap$Gender)
head(lungcap$Smoke)
length(lungcap$Age)
length(lungcap$FEV)
length(lungcap$Smoke)
length(lungcap$Gender)
dim(lungcap)
str(lungcap)
sumary(lungcap)
summary(lungcap)
sumary(lungcap$Smoke)
summary(lungcap$Smoke)
lungcap$Smoke <- factor(lungcap$Smoke,
levels=c(0, 1), # The values of Smoke
labels=c("Non-smoker","Smoker")) # The labels
summary(lungcap$Smoke)
plot( FEV ~ Age, data=lungcap,
xlab="Age (in years)", # The x-axis label
ylab="FEV (in L)", # The y-axis label
main="FEV vs age", # The main title
xlim=c(0, 20), # Explicitly set x-axis limits
ylim=c(0, 6), # Explicitly set y-axis limits
las=1)
plot( FEV ~ Ht, data=lungcap, main="FEV vs height",
xlab="Height (in inches)", ylab="FEV (in L)",
las=1, ylim=c(0, 6) )
plot( FEV ~ Smoke, data=lungcap, main="FEV vs Smoking status",
ylab="FEV (in L)", xlab="Smoking status",
las=1, ylim=c(0, 6))
plot( FEV ~ Smoke, data=lungcap, main="FEV vs Smoking status",
ylab="FEV (in L)", xlab="Smoking status",
ylim=c(0, 6))
plot( FEV ~ Smoke, data=lungcap, main="FEV vs Smoking status",
ylab="FEV (in L)", xlab="Smoking status",
las=1, ylim=c(0, 6))
install.packages("gapminder")
library("gapminder")
aggregate(lifeExp ~ continent, gapminder, median)
head(gapminder)
library("dplyr")
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(lifeExp = median(lifeExp))
library("ggplot2")
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4)
head(country_colors, 4)
head(continent_colors)
ggplot(subset(gapminder, continent != "Oceania"),
aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd = 1, show.legend = FALSE) + facet_wrap(~ continent) +
scale_color_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
summary(gapminder)
head(gapminder)
citation("gapminder")
gapminder
gapminder %>%
filter(
continent == "Americas",
country == "United States",
year %in% c(1997, 2002, 2007)
)
gapminder %>%
filter(
year == 2007,
continent == "Americas",
country == "United States"
) %>%
summarize(mean(lifeExp))
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarize(avgLifeExp = mean(lifeExp))
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(totalPop = sum(pop)) %>%
arrange(desc(totalPop))
gapminder %>%
filter(year == 2007) %>%
mutate(totalGdp = pop * gdpPercap)
gapminder %>%
filter(year == 2007) %>%
mutate(percentile = ntile(lifeExp, 100)) %>%
arrange(desc(gdpPercap))
gapminder %>%
filter(year == 2007) %>%
mutate(percentile = ntile(lifeExp, 100)) %>%
arrange(gdpPercap)
gapminder %>%
filter(year == 2007) %>%
mutate(percentile = ntile(lifeExp, 100)) %>%
filter(percentile > 90) %>%
arrange(desc(percentile)) %>%
top_n(10, wt = percentile) %>%
select(continent, country, lifeExp, percentile)
gapminder %>%
filter(year == 2007) %>%
mutate(percentile = ntile(lifeExp, 100)) %>%
filter(percentile < 10) %>%
arrange(percentile) %>%
top_n(-10, wt = percentile) %>%
select(continent, country, lifeExp, percentile)
gapminder %>% as_tibble() %>%
head(5)
top5_countries <- gapminder %>%
filter(year == 2015) %>%
arrange(-population) %>%
select(country) %>%
head(5) %>%
pull()
gapminder %>%
filter(year==2000) %>%
ggplot(aes(y=fertility, x=gdp/population)) +
geom_point() +
geom_smooth(se=F, method = "lm")
library(rlang)
library(purrr)
library(rlang)
top5_countries <- gapminder %>%
+     filter(year == 2015) %>%
+     arrange(-population) %>%
+     select(country) %>%
+     head(5) %>%
+     pull()
gapminder %>%
filter(year==2015) %>%
group_by(continent) %>%
summarize(population_in_billion=sum(population)/10^9) %>%
ggplot(aes(x=continent, y=population_in_billion)) +
geom_col()
rlang::last_error()
rlang::last_trace()
gapminder %>%
filter(year==2000) %>%
summarize(life_expectancy=sum(life_expectancy*population)/sum(population))
gap_tsv <- system.file("extdata", "gapminder.tsv", package = "gapminder")
gap_tsv <- read.delim(gap_tsv)
str(gap_tsv)
gap_tsv %>% # Bhutan did not make the cut because data for only 8 years :(
filter(country == "Bhutan")
gap_bigger_tsv <-
system.file("extdata", "gapminder-unfiltered.tsv", package = "gapminder")
gap_bigger_tsv <- read.delim(gap_bigger_tsv)
str(gap_bigger_tsv)
gap_bigger_tsv %>% # Bhutan IS here though! :)
filter(country == "Bhutan")
library(ggplot2)
gapminder %>%
+     filter(year==2015) %>%
+     group_by(continent) %>%
+     summarize(population_in_billion=sum(population)/10^9) %>%
+     ggplot(aes(x=continent, y=population_in_billion)) +
+     geom_col()
gapminder %>%
+         dplyr::filter(year==2015) %>%
+          group_by(continent) %>%
+          summarize(population_in_billion=sum(population)/10^9) %>%
+          ggplot(aes(x=continent, y=population_in_billion)) +
+          geom_col()
library(scales)
str(gapminder)
summary(gapminder)
gapminder
print(gapminder)
print(gapminder,n=20)
table(gapminder$continent, gapminder$year)
plot(gapminder$continent, gapminder$year)
ggplot(gapminder, aes(x=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) + geom_bar()
library(mtcars)
library(dplyr)
install.packeges("mtcars")
install.packages("mtcars")
library(dplyr)
library(explore)
install.packages('explore')
library(explore)
mtcars %>% explore_tbl()
mtcars %>% describe()
mtcars %>%
explore_all()
install.packages("rvest")
install.packages("rvest")
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
install.packages("magrittr")
lego_movie %>%
+     html_nodes("#titleCast .itemprop span") %>%
+     html_text()
library(magrittr)
lego_movie %>%
+         html_nodes("#titleCast .itemprop span") %>%
+          html_text()
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
shiny::runApp('DataScience in R/ShinyApps/ShinyApp04')
runApp('DataScience in R/ShinyApps/ShinyApp05')
